digraph aqua{
    labelloc="t";
    label="AQuA Pipeline v1";
    # DB node
    node[shape=cylinder, style=filled, fillcolor=green];
    db[label="DB"];
    # Docker nodes
    node[shape=component, style=filled, fillcolor=orange];
    graph[shappe=rectangle,style=filled, fillcolor=yellow];
    subgraph cluster_prd{
        label="Pull Revision Docker"
        labelloc="b";
        pull_revision[label="Pull\nrevision.py"];
    }
    subgraph cluster_sr{
        label="Split Revision Docker";
        labelloc="b";
        split_revision[label="Split\nrevision.py"];
    }
    subgraph cluster_ss{
        label="Semantic Similarity Docker";
        labelloc="b";
        sem_sim1[label="Semantic\nSimilarity1.py"];
        sem_sim2[label="Semantic\nSimilarity2.py"];
        sem_sim3[label="Semantic\nSimilarity3.py"];
    }
    subgraph cluster_cd{
        label="Check Done Docker";
        labelloc="b";
        done[label="Check\nDone"];
    }
    #repo nodes
    node[shape=note, style=filled, fillcolor=cyan];
    revision[label="Revision.txt"];
    pull_revision1[label="Pull\nRevision.txt"];
    split_revision1[label="Split\nRevision1.txt"];
    split_revision2[label="Split\nRevision2.txt"];
    split_revision3[label="Split\nRevision3.txt"];
    sem_sim_result1[label="SemSim1.txt"];
    sem_sim_result2[label="SemSim2.txt"];
    sem_sim_result3[label="SemSim3.txt"];
    #edges
    revision->pull_revision;
    pull_revision->pull_revision1;
    pull_revision1->split_revision;
    split_revision->split_revision1;
    split_revision->split_revision2;
    split_revision->split_revision3;
    split_revision1->sem_sim1;
    split_revision2->sem_sim2;
    split_revision3->sem_sim3;
    sem_sim1->sem_sim_result1;
    sem_sim2->sem_sim_result2;
    sem_sim3->sem_sim_result3;
    sem_sim_result1->done;
    sem_sim_result2->done;
    sem_sim_result3->done;
    sem_sim_result1->db;
    sem_sim_result2->db;
    sem_sim_result3->db;
    done->db[label="update_status()"];
}