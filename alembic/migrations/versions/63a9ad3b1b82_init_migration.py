"""init_migration

Revision ID: 63a9ad3b1b82
Revises: 
Create Date: 2024-02-08 16:50:30.923087

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '63a9ad3b1b82'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book_reference',
    sa.Column('abbreviation', sa.Text(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('abbreviation')
    )
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('iso_language',
    sa.Column('iso639', sa.String(length=3), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('iso639'),
    sa.UniqueConstraint('iso639')
    )
    op.create_table('iso_script',
    sa.Column('iso15924', sa.String(length=4), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('iso15924'),
    sa.UniqueConstraint('iso15924')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('hashed_password', sa.String(length=100), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('bible_version',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('iso_language', sa.String(length=3), nullable=True),
    sa.Column('iso_script', sa.String(length=4), nullable=True),
    sa.Column('abbreviation', sa.Text(), nullable=True),
    sa.Column('rights', sa.Text(), nullable=True),
    sa.Column('forward_translation_id', sa.Integer(), nullable=True),
    sa.Column('back_translation_id', sa.Integer(), nullable=True),
    sa.Column('machine_translation', sa.Boolean(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('deletedAt', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['back_translation_id'], ['bible_version.id'], ),
    sa.ForeignKeyConstraint(['iso_language'], ['iso_language.iso639'], ),
    sa.ForeignKeyConstraint(['iso_script'], ['iso_script.iso15924'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chapter_reference',
    sa.Column('full_chapter_id', sa.Text(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('book_reference', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['book_reference'], ['book_reference.abbreviation'], ),
    sa.PrimaryKeyConstraint('full_chapter_id')
    )
    op.create_table('user_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bible_revision',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('bible_version_id', sa.Integer(), nullable=True),
    sa.Column('published', sa.Boolean(), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('back_translation_id', sa.Integer(), nullable=True),
    sa.Column('machine_translation', sa.Boolean(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('deletedAt', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['back_translation_id'], ['bible_revision.id'], ),
    sa.ForeignKeyConstraint(['bible_version_id'], ['bible_version.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bible_version_access',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bible_version_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bible_version_id'], ['bible_version.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('verse_reference',
    sa.Column('full_verse_id', sa.Text(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('chapter', sa.Text(), nullable=True),
    sa.Column('book_reference', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['book_reference'], ['book_reference.abbreviation'], ),
    sa.ForeignKeyConstraint(['chapter'], ['chapter_reference.full_chapter_id'], ),
    sa.PrimaryKeyConstraint('full_verse_id'),
    sa.UniqueConstraint('full_verse_id')
    )
    op.create_table('assessment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('revision_id', sa.Integer(), nullable=True),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Text(), nullable=True),
    sa.Column('status', sa.Text(), nullable=True),
    sa.Column('requested_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('start_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('end_time', sa.TIMESTAMP(), nullable=True),
    sa.Column('assessment_version', sa.String(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('deletedAt', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['reference_id'], ['bible_revision.id'], ),
    sa.ForeignKeyConstraint(['revision_id'], ['bible_revision.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('verse_text',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('revision_id', sa.Integer(), nullable=True),
    sa.Column('verse_reference', sa.Text(), nullable=True),
    sa.Column('book', sa.Text(), nullable=True),
    sa.Column('chapter', sa.Integer(), nullable=True),
    sa.Column('verse', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['revision_id'], ['bible_revision.id'], ),
    sa.ForeignKeyConstraint(['verse_reference'], ['verse_reference.full_verse_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('alignment_threshold_scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=True),
    sa.Column('score', sa.Numeric(), nullable=True),
    sa.Column('flag', sa.Boolean(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('vref', sa.Text(), nullable=True),
    sa.Column('source', sa.Text(), nullable=True),
    sa.Column('target', sa.Text(), nullable=True),
    sa.Column('hide', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessment.id'], ),
    sa.ForeignKeyConstraint(['vref'], ['verse_reference.full_verse_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('alignment_top_source_scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=True),
    sa.Column('score', sa.Numeric(), nullable=True),
    sa.Column('flag', sa.Boolean(), nullable=True),
    sa.Column('vref', sa.Text(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('source', sa.Text(), nullable=True),
    sa.Column('target', sa.Text(), nullable=True),
    sa.Column('hide', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessment.id'], ),
    sa.ForeignKeyConstraint(['vref'], ['verse_reference.full_verse_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assessment_access',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessment.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assessment_result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Numeric(), nullable=True),
    sa.Column('flag', sa.Boolean(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('vref', sa.Text(), nullable=True),
    sa.Column('source', sa.Text(), nullable=True),
    sa.Column('target', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('hide', sa.Boolean(), nullable=True),
    sa.Column('book', sa.Text(), nullable=True),
    sa.Column('chapter', sa.Integer(), nullable=True),
    sa.Column('verse', sa.Integer(), nullable=True),
    sa.Column('assessment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessment.id'], ),
    sa.ForeignKeyConstraint(['vref'], ['verse_reference.full_verse_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('assessment_result')
    op.drop_table('assessment_access')
    op.drop_table('alignment_top_source_scores')
    op.drop_table('alignment_threshold_scores')
    op.drop_table('verse_text')
    op.drop_table('assessment')
    op.drop_table('verse_reference')
    op.drop_table('bible_version_access')
    op.drop_table('bible_revision')
    op.drop_table('user_groups')
    op.drop_table('chapter_reference')
    op.drop_table('bible_version')
    op.drop_table('users')
    op.drop_table('iso_script')
    op.drop_table('iso_language')
    op.drop_table('groups')
    op.drop_table('book_reference')
    # ### end Alembic commands ###
