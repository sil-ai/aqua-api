"""remove relation

Revision ID: aae977dc89ea
Revises: f9149ccd4822
Create Date: 2024-01-05 11:25:01.300108

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'aae977dc89ea'
down_revision: Union[str, None] = 'f9149ccd4822'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('assessment', 'start_time',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('assessment', 'end_time',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
    op.create_unique_constraint(None, 'iso_language', ['iso639'])
    op.create_unique_constraint(None, 'iso_script', ['iso15924'])
    op.create_unique_constraint(None, 'verse_reference', ['full_verse_id'])
    op.add_column('verse_text', sa.Column('verse_reference', sa.Text(), nullable=True))
    op.create_foreign_key(None, 'verse_text', 'verse_reference', ['verse_reference'], ['full_verse_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'verse_text', type_='foreignkey')
    op.drop_column('verse_text', 'verse_reference')
    op.drop_constraint(None, 'verse_reference', type_='unique')
    op.drop_constraint(None, 'iso_script', type_='unique')
    op.drop_constraint(None, 'iso_language', type_='unique')
    op.alter_column('assessment', 'end_time',
               existing_type=sa.TIMESTAMP(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    op.alter_column('assessment', 'start_time',
               existing_type=sa.TIMESTAMP(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
    # ### end Alembic commands ###
